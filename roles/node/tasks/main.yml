---
- name: Make sure fnm is installed
  community.general.homebrew:
    name: fnm
    state: present

- name: Get latest LTS Node version
  ansible.builtin.shell: |
    set -o pipefail
    fnm ls-remote --lts | tail -1 | awk '{print $1}'
  register: node_latest_lts_version
  changed_when: false

- name: Get installed Node versions
  ansible.builtin.command: fnm list
  register: node_installed_versions
  changed_when: false
  failed_when: false

- name: Get current default Node version
  ansible.builtin.shell: |
    set -o pipefail
    eval "$(fnm env)"
    fnm current
  register: node_current_version
  changed_when: false
  failed_when: false

- name: Check if latest LTS is installed
  ansible.builtin.set_fact:
    node_lts_already_installed: "{{ node_latest_lts_version.stdout in node_installed_versions.stdout }}"

- name: Install latest LTS Node version via fnm
  ansible.builtin.command: fnm install {{ node_latest_lts_version.stdout }}
  when: not node_lts_already_installed
  changed_when: true

- name: Set default to latest LTS
  ansible.builtin.command: fnm default {{ node_latest_lts_version.stdout }}
  when: node_current_version.stdout.strip() != node_latest_lts_version.stdout.strip()
  changed_when: node_current_version.stdout.strip() != node_latest_lts_version.stdout.strip()
