---
- name: Make sure rbenv is installed
  homebrew:
    name: rbenv
    state: present

- name: Make sure ruby-build is installed
  homebrew:
    name: ruby-build
    state: present

- name: Get latest available Ruby version
  ansible.builtin.shell: |
    set -o pipefail
    rbenv install -l | grep -v - | tail -1 | tr -d '[:space:]'
  register: latest_ruby_version
  changed_when: false

- name: Get current global Ruby version
  ansible.builtin.command: rbenv global
  register: current_ruby_version
  changed_when: false
  failed_when: false

- name: Install latest Ruby version via rbenv
  ansible.builtin.command: rbenv install "{{ latest_ruby_version.stdout }}" --skip-existing
  when: current_ruby_version.stdout != latest_ruby_version.stdout
  register: ruby_install
  changed_when: ruby_install.stdout | trim | length > 0

- name: Set global Ruby version to latest
  ansible.builtin.command: rbenv global "{{ latest_ruby_version.stdout }}"
  when: current_ruby_version.stdout != latest_ruby_version.stdout
  changed_when: true # Always changed when it runs (version is being switched)

- name: Rehash rbenv shims
  ansible.builtin.command: rbenv rehash
  when: ruby_install is changed
  changed_when: false
